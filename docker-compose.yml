version: '3.8'

services:

  #router:
  
    #build:
    #  context: ./docker/router
    #image: midebian-router
    #hostname: router
    #container_name: router
    #privileged: true
    #ports:
    #  - "8080:8080"
    #network_mode: "host"
    #networks:
    #  dmz:
    #    ipv4_address: 10.0.1.2
    #  dev:
    #    ipv4_address: 10.0.3.2
    #  srv:
    #    ipv4_address: 10.0.2.2
    #tty: true
    #stdin_open: true

  jump:
    build:
      context: ./docker/jump
    image: midebian-jump
    container_name: jump
    hostname: jump
    privileged: true
    networks:
      dmz:
        ipv4_address: 10.0.1.3
    tty: true
    stdin_open: true

  work:
    build:
      context: ./docker/work
    image: midebian-work
    hostname: work
    container_name: work
    privileged: true
    networks:
      dev:
        ipv4_address: 10.0.3.3
    tty: true
    stdin_open: true

  auth:
    build:
      context: ./docker/seg-red-auth
    env_file:
      - ./docker/seg-red-auth/.dk.env
    volumes:
      - ./docker/certs/mycert.crt:/app/mycert.crt
      - ./docker/certs/mycert.key:/app/mycert.key
    networks:
      srv:
        ipv4_address: 10.0.2.3
    depends_on:
      postgres:
        condition: service_healthy

  file:
    build:
      context: ./docker/seg-red-file
    env_file:
      - ./docker/seg-red-file/.dk.env
    volumes:
      - ./docker/certs/mycert.crt:/app/mycert.crt
      - ./docker/certs/mycert.key:/app/mycert.key
    networks:
      srv:
        ipv4_address: 10.0.2.4

  broker:
    build:
      context: ./docker/seg-red-broker
    env_file:
      - ./docker/seg-red-broker/.dk.env
    volumes:
      - ./docker/certs/mycert.crt:/app/mycert.crt
      - ./docker/certs/mycert.key:/app/mycert.key
    networks:
      dmz:
        ipv4_address: 10.0.1.4
    depends_on:
      - auth
      - file

  postgres:
    image: postgres:14-alpine
    container_name: postgres_gin_gonic_api
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: gin-gonic-api
    networks:
      srv:
        ipv4_address: 10.0.2.5

networks:
  dmz:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.1.0/24
  srv:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.2.0/24
  dev:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.3.0/24

volumes:
  postgres-data:
