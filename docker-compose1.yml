version: '3'
services:

  postgres:
    image: postgres:14-alpine
    container_name: postgres_gin_gonic_api
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: gin-gonic-api

  file:
    build: ./docker/seg-red-file
    env_file:
      - ./docker/seg-red-file/.dk.env
    volumes:
      - ./docker/certs/mycert.crt:/app/mycert.crt
      - ./docker/certs/mycert.key:/app/mycert.key
    networks:
      srv:
        ipv4_address: 10.0.2.4

  auth:
    build: ./docker/seg-red-auth
    env_file:
      - ./docker/seg-red-auth/.dk.env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./docker/certs/mycert.crt:/app/mycert.crt
      - ./docker/certs/mycert.key:/app/mycert.key
    networks:
      srv:
        ipv4_address: 10.0.2.3
        
  broker:
    build: ./docker/seg-red-broker
    ports:
      - "8080:8080"
    env_file:
      - ./docker/seg-red-broker/.dk.env
    depends_on:
      - auth
      - file
    volumes:
      - ./docker/certs/mycert.crt:/app/mycert.crt
      - ./docker/certs/mycert.key:/app/mycert.key
    networks:
       dmz:
         ipv4_address: 10.0.1.4

volumes:
  postgres-data: